source("~/Downloads/power_angeles.R")
getwd()
ls()
dir()
source("~/Downloads/power_angeles.R")
install.packages("Superpower")
library(Superpower)
library(Superpower)
source("~/Downloads/power_angeles.R")
View(result)
source("~/Documents/Curso R/Tarea_Octubre2021.R")
Vector_NA%in%PAAD_Liu
Vector_NA <- c("[Not Evaluated]", "[Unknown]", "[Not Available]","[Discrepancy]")
Vector_NA%in%PAAD_Liu
PAAD_Liu%in%Vector_NA
PAAD_Liu$race%in%Vector_NA
PAAD_Liu=="[Not Evaluated]"
## 2 Importar base de datos ####
DB_Thorsson <- read.xlsx(xlsxFile = "./TAREA/Thorsson.xlsx",sheet = 1)
## 3 Subset del cáncer PAAD: Pancreatic adenocarcinoma ####
PAAD_Thorsson <- subset(DB_Thorsson,subset = (TCGA.Study=="PAAD"))
## 4 Preparar base de datos ####
### a) Agregar columna ####
PAAD_Thorsson$Cancer <- "Pancreatic Adenocarcinoma"
### b) Chequear tipo de variables ####
sapply(PAAD_Thorsson,class)
### c) Variables categóricas ####
#Para transformar a factor :Immune.Subtype, OS, PFI
PAAD_Thorsson[,c(3,33,35)] <- lapply(PAAD_Thorsson[,c(3,33,35)], as.factor)
### d) Eliminar filas que contengan NA en > 50% de las columnas ####
PAAD_Thorsson<-PAAD_Thorsson[!(rowSums(is.na(PAAD_Thorsson)) > 0.5*ncol(PAAD_Thorsson)),]
# Parte 2: ####
## 5 Descargar DB ####
# Uso la misma carpeta que creé en la parte 1
download.file("https://www.cell.com/cms/10.1016/j.cell.2018.02.052/attachment/bbf46a06-1fb0-417a-a259-fd47591180e4/mmc1.xlsx",
"./TAREA/Liu.xlsx")
## 6 Importar DB ####
DB_Liu <- read.xlsx("./TAREA/Liu.xlsx", sheet = 1)
DB_Liu <- DB_Liu[!duplicated(DB_Liu$bcr_patient_barcode),] #Elimina duplicados
## 7 Subset de matchs entre las dos DB ####
PAAD_Liu<-DB_Liu[DB_Liu$bcr_patient_barcode%in%PAAD_Thorsson$TCGA.Participant.Barcode,]
#PAAD_L <- subset(DB_Liu,subset = (type=="PAAD"))
## 8 Preparar base de datos  ####
### a) Calcular edad pacientes ####
PAAD_Liu$edad <- PAAD_Liu$birth_days_to/-365.25
### b) Chequear tipo de variables ####
sapply(PAAD_Liu, class)
### d) Formatear NAs (ojalá supiera usar un FOR :P) ####
values <- lapply(PAAD_Liu,unique)
Vector_NA <- c("[Not Evaluated]", "[Unknown]", "[Not Available]","[Discrepancy]")
PAAD_Liu[PAAD_Liu=="[Not Evaluated]"]
PAAD_Liu[PAAD_Liu=="[Not Evaluated]"]
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/Interaction_plots.R")
# Plot with CIs
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 3) +
geom_line(size = 2) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline Mean Connectivity by Group",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
# Plot with CIs
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 3) +
geom_line(size = 0.7) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 1) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline Mean Connectivity by Group",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 3) +
geom_line(size = 0.7) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline Mean Connectivity by Group",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size= 3,width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline Mean Connectivity by Group",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
# Plot with CIs
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size= 1.5,width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline Mean Connectivity by Group",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
# Plot with CIs
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 5) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size= 1.5,width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline Mean Connectivity by Group",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
# Plot with CIs
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 5) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size= 1.5,width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline Mean Connectivity",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
# Plot with CIs
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 5) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size= 1.5,width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline (1st episode) Connectivity",
x = "Groups",
y = "Mean residuals (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
# Plot with CIs
plot_ci <- ggplot(summary_data, aes(x = group, y = mean_residuals, color = group)) +
geom_point(size = 5) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), size= 1.5,width = 0.2) +
theme_bw() +
scale_color_jama(labels = c("NTR", "TR")) +  # Change legend labels
labs(
title = "Baseline (1st episode) Connectivity",
x = "Groups",
y = "Mean t-values (with CI)"
) +
theme(
axis.title = element_text(size = 20, face = "bold"),
axis.text = element_text(size = 24, face = "bold"),
legend.title = element_blank(),
legend.text = element_text(size = 24, face = "bold"),
plot.title = element_text(size = 28, face = "bold", hjust = 0.5)  # Title styling
)
# Display the plot
print(plot_ci)
