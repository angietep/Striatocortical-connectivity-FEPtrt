source("~/Downloads/power_angeles.R")
getwd()
ls()
dir()
source("~/Downloads/power_angeles.R")
install.packages("Superpower")
library(Superpower)
library(Superpower)
source("~/Downloads/power_angeles.R")
View(result)
source("~/Documents/Curso R/Tarea_Octubre2021.R")
Vector_NA%in%PAAD_Liu
Vector_NA <- c("[Not Evaluated]", "[Unknown]", "[Not Available]","[Discrepancy]")
Vector_NA%in%PAAD_Liu
PAAD_Liu%in%Vector_NA
PAAD_Liu$race%in%Vector_NA
PAAD_Liu=="[Not Evaluated]"
## 2 Importar base de datos ####
DB_Thorsson <- read.xlsx(xlsxFile = "./TAREA/Thorsson.xlsx",sheet = 1)
## 3 Subset del cáncer PAAD: Pancreatic adenocarcinoma ####
PAAD_Thorsson <- subset(DB_Thorsson,subset = (TCGA.Study=="PAAD"))
## 4 Preparar base de datos ####
### a) Agregar columna ####
PAAD_Thorsson$Cancer <- "Pancreatic Adenocarcinoma"
### b) Chequear tipo de variables ####
sapply(PAAD_Thorsson,class)
### c) Variables categóricas ####
#Para transformar a factor :Immune.Subtype, OS, PFI
PAAD_Thorsson[,c(3,33,35)] <- lapply(PAAD_Thorsson[,c(3,33,35)], as.factor)
### d) Eliminar filas que contengan NA en > 50% de las columnas ####
PAAD_Thorsson<-PAAD_Thorsson[!(rowSums(is.na(PAAD_Thorsson)) > 0.5*ncol(PAAD_Thorsson)),]
# Parte 2: ####
## 5 Descargar DB ####
# Uso la misma carpeta que creé en la parte 1
download.file("https://www.cell.com/cms/10.1016/j.cell.2018.02.052/attachment/bbf46a06-1fb0-417a-a259-fd47591180e4/mmc1.xlsx",
"./TAREA/Liu.xlsx")
## 6 Importar DB ####
DB_Liu <- read.xlsx("./TAREA/Liu.xlsx", sheet = 1)
DB_Liu <- DB_Liu[!duplicated(DB_Liu$bcr_patient_barcode),] #Elimina duplicados
## 7 Subset de matchs entre las dos DB ####
PAAD_Liu<-DB_Liu[DB_Liu$bcr_patient_barcode%in%PAAD_Thorsson$TCGA.Participant.Barcode,]
#PAAD_L <- subset(DB_Liu,subset = (type=="PAAD"))
## 8 Preparar base de datos  ####
### a) Calcular edad pacientes ####
PAAD_Liu$edad <- PAAD_Liu$birth_days_to/-365.25
### b) Chequear tipo de variables ####
sapply(PAAD_Liu, class)
### d) Formatear NAs (ojalá supiera usar un FOR :P) ####
values <- lapply(PAAD_Liu,unique)
Vector_NA <- c("[Not Evaluated]", "[Unknown]", "[Not Available]","[Discrepancy]")
PAAD_Liu[PAAD_Liu=="[Not Evaluated]"]
PAAD_Liu[PAAD_Liu=="[Not Evaluated]"]
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT/Longitudinalplot_cleansample.R")
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT/Longitudinalplot_cleansample.R")
ggplot(df, aes(x=age, fill=group)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("red","#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
ggplot(df, aes(x = age, fill = group)) +
geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
labs(x = "Age", y = "Frequency")
ggplot(organized_df, aes(x = t_DIT)) +
geom_line(aes(y=ID, group = ID ), size = .3) +
geom_point(aes(y=ID, color = as.factor(group),shape = factor(ses)), size=2) +
labs(x = "Duration of treatment (months)", y = "Subject ID", color = "Group", shape= "Session") +
theme(legend.position = "top", axis.text.y = element_text(size = 5)) +
geom_density(aes(y = -..density..*500), fill= "#69b3a2") +
geom_label(aes(x=75, y=-10, label="density")) +
scale_x_continuous(breaks = c(specific_ticks, 0, 25, 50, 75, 100),
labels = c(specific_labels, 0, 25, 50, 75, 100)) +
geom_text(aes(x=12, y=-20, label="1y"), size=3) +
geom_text(aes(x=12*2, y=-20, label="2y"), size=3) +
geom_text(aes(x=12*4, y=-20, label="4y"), size=3) +
geom_text(aes(x=12*6, y=-20, label="6y"), size=3) +
geom_text(aes(x=12*7, y=-20, label="7y"), size=3)
