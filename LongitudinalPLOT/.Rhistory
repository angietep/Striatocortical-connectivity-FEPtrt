source("~/Downloads/power_angeles.R")
getwd()
ls()
dir()
source("~/Downloads/power_angeles.R")
install.packages("Superpower")
library(Superpower)
library(Superpower)
source("~/Downloads/power_angeles.R")
View(result)
source("~/Documents/Curso R/Tarea_Octubre2021.R")
Vector_NA%in%PAAD_Liu
Vector_NA <- c("[Not Evaluated]", "[Unknown]", "[Not Available]","[Discrepancy]")
Vector_NA%in%PAAD_Liu
PAAD_Liu%in%Vector_NA
PAAD_Liu$race%in%Vector_NA
PAAD_Liu=="[Not Evaluated]"
## 2 Importar base de datos ####
DB_Thorsson <- read.xlsx(xlsxFile = "./TAREA/Thorsson.xlsx",sheet = 1)
## 3 Subset del cáncer PAAD: Pancreatic adenocarcinoma ####
PAAD_Thorsson <- subset(DB_Thorsson,subset = (TCGA.Study=="PAAD"))
## 4 Preparar base de datos ####
### a) Agregar columna ####
PAAD_Thorsson$Cancer <- "Pancreatic Adenocarcinoma"
### b) Chequear tipo de variables ####
sapply(PAAD_Thorsson,class)
### c) Variables categóricas ####
#Para transformar a factor :Immune.Subtype, OS, PFI
PAAD_Thorsson[,c(3,33,35)] <- lapply(PAAD_Thorsson[,c(3,33,35)], as.factor)
### d) Eliminar filas que contengan NA en > 50% de las columnas ####
PAAD_Thorsson<-PAAD_Thorsson[!(rowSums(is.na(PAAD_Thorsson)) > 0.5*ncol(PAAD_Thorsson)),]
# Parte 2: ####
## 5 Descargar DB ####
# Uso la misma carpeta que creé en la parte 1
download.file("https://www.cell.com/cms/10.1016/j.cell.2018.02.052/attachment/bbf46a06-1fb0-417a-a259-fd47591180e4/mmc1.xlsx",
"./TAREA/Liu.xlsx")
## 6 Importar DB ####
DB_Liu <- read.xlsx("./TAREA/Liu.xlsx", sheet = 1)
DB_Liu <- DB_Liu[!duplicated(DB_Liu$bcr_patient_barcode),] #Elimina duplicados
## 7 Subset de matchs entre las dos DB ####
PAAD_Liu<-DB_Liu[DB_Liu$bcr_patient_barcode%in%PAAD_Thorsson$TCGA.Participant.Barcode,]
#PAAD_L <- subset(DB_Liu,subset = (type=="PAAD"))
## 8 Preparar base de datos  ####
### a) Calcular edad pacientes ####
PAAD_Liu$edad <- PAAD_Liu$birth_days_to/-365.25
### b) Chequear tipo de variables ####
sapply(PAAD_Liu, class)
### d) Formatear NAs (ojalá supiera usar un FOR :P) ####
values <- lapply(PAAD_Liu,unique)
Vector_NA <- c("[Not Evaluated]", "[Unknown]", "[Not Available]","[Discrepancy]")
PAAD_Liu[PAAD_Liu=="[Not Evaluated]"]
PAAD_Liu[PAAD_Liu=="[Not Evaluated]"]
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT/Longitudinalplot_cleansample.R")
ggplot(organized_df, aes(x = t_DIT)) +
geom_line(aes(y=ID, group = ID ), size = .3) +
geom_point(aes(y=ID, color = as.factor(group),shape = factor(ses)), size=2) +
labs(x = "Duration of treatment (months)", y = "Subject ID", color = "Group", shape= "Session") +
theme(legend.position = "top", axis.text.y = element_text(size = 5)) +
geom_density(aes(y = -..density..*500), fill= "#69b3a2") +
geom_label(aes(x=75, y=-10, label="density")) +
scale_x_continuous(breaks = c(specific_ticks, 0, 25, 50, 75, 100),
labels = c(specific_labels, 0, 25, 50, 75, 100)) +
geom_text(aes(x=12, y=-20, label="1y"), size=3) +
geom_text(aes(x=12*2, y=-20, label="2y"), size=3) +
geom_text(aes(x=12*4, y=-20, label="4y"), size=3) +
geom_text(aes(x=12*6, y=-20, label="6y"), size=3) +
geom_text(aes(x=12*7, y=-20, label="7y"), size=3)
View(df)
View(df)
View(organized_df)
sum(df$group=="HC")
sum(df$group=="HC" & df$ses== 01)
View(df)
sum(df$group=="HC" & df$ses== 1)
sum(df$group=="HC" & df$ses== 2)
sum(df$group=="HC" & df$ses== 3)
sum(df$group=="HC" & df$ses== 4)
sum(df$group!="HC" & df$ses== 1)
sum(df$group!="HC")
range(df$t_DIT[df$group!="HC"])
80.82/12
sum(df$group=="nonTRS" & df$ses== 1)
sum(df$group=="TRS" & df$ses== 1)
range(df$t_DIT[df$group=="HC"])
53/12
4/59
4/59 * 100
30/85 ¡ 100
30/85 * 100
33 + 18
51/85
View(df)
sum(df$group=="TRS" & df$sex=="Masculino")
sum(df$group=="nonTRS" & df$sex=="Masculino")
sum(df$group=="nonTRS" & df$sex=="Masculino" & df$ses==1)
sum(df$group=="TRS" & df$sex=="Masculino" & df$ses==1)
sum(df$group=="HC" & df$sex=="Masculino" & df$ses==1)
76/118
46/55
23/30
contingency_table <- table(df$group[df$ses==1], df$sex[df$ses==1])
print(contingency_table)
chi_square_test <- chisq.test(contingency_table)
print chi_square_test
print(chi_square_test)
mean(df$age[df$group=="TRS" & df$ses==1])
sd(df$age[df$group=="TRS" & df$ses==1])
mean(df$age[df$group=="nonTRS" & df$ses==1])
sd(df$age[df$group=="nonTRS" & df$ses==1])
mean(df$age[df$group=="HC" & df$ses==1])
sd(df$age[df$group=="HC" & df$ses==1])
shapiro_test_HC <- shapiro.test(df$age[df$group == "HC" & df$ses==1])
shapiro_test_TRS <- shapiro.test(df$age[df$group == "TRS"  & df$ses==1])
shapiro_test_nonTRS <- shapiro.test(df$age[df$group == "nonTRS"  & df$ses==1])
print (shapiro_test_HC)
print (shapiro_test_TRS)
print (shapiro_test_nonTRS)
kruskal_test <- kruskal.test(age ~ group, data = df[df$ses==1])
baseline_df = df[df$ses==1,]
kruskal_test <- kruskal.test(age ~ group, data = df[df$ses==1, ])
print(kruskal_test)
pairwise_comparisons <- pairwise.wilcox.test(baseline_df$age, baseline_df$group, p.adjust.method = "bonferroni")
print(pairwise_comparisons)
pairwise_comparisons <- pairwise.wilcox.test(baseline_df$age, baseline_df$group)
print(pairwise_comparisons)
df_fup <- df %>%
group_by(subject_id, group) %>%
summarise(has_follow_up = n() > 1) %>%
ungroup()
df_fup <- df %>%
group_by(ID, group) %>%
summarise(has_follow_up = n() > 1) %>%
ungroup()
print(df_fup)
contingency_table <- table(df_fup$group, df_fup$has_follow_up)
print(contingency_table)
sum(df$group=="HC" & df$group == 2)
sum(df$group=="HC" & df$ses == 2)
sum(df$group=="HC" & df$ses == 1)
sum(df$group=="TRS" & df$ses == 2)
sum(df$group=="TRS" & df$ses == 3)
sum(df$group=="TRS" & df$ses == 4)
sum(df$group=="TRS" & df$ses == 5)
18 + 9 + 4
View(df_fup)
chi_square_test <- chisq.test(contingency_table)
print(chi_square_test)
60 + 58
58/118 * 100
print(contingency_table)
33 / (33+24)
33 +24
12 + 18
count(unique(df$ID))
unique(df$ID)
a = unique(df$ID)
205 - 118 + 30
205 - 118 - 30
ids_with_ses_2_or_higher <- df %>%
filter(ses >= 2) %>%
pull(subject_id) %>%
unique()
ids_with_ses_2_or_higher <- df %>%
filter(ses >= 2) %>%
pull(ID) %>%
unique()
ids_with_ses_1 <- df %>%
filter(ses == 1) %>%
pull(subject_id) %>%
unique()
ids_with_ses_1 <- df %>%
filter(ses == 1) %>%
pull(ID) %>%
unique()
# Exclude IDs with ses = 1
ids_without_ses_1 <- setdiff(ids_with_ses_2_or_higher, ids_with_ses_1)
# Print the result
print(ids_without_ses_1)
df_long <- read.csv("subjects_finallist_DIT.csv")
# Set environment ####
rm(list= ls())# ctrl + L to clear console
setwd("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT/")
#setwd("/Users/brainsur/Desktop/GitHub_repos/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT")
library(tidyverse)
library(dplyr)
library(hrbrthemes)
#library(ggplot2)
# PREPARE DATA ####
## Import data ####
df<-read.csv("cleansample_covars.csv")
df <- df[df$ID != 'C104', ]
df <- df[df$ID != 'C105', ]
df_long <- read.csv("subjects_finallist_DIT.csv")
View(df_long)
View(df_long)
drop_na(df_long$t)
df_long <- df_long %>% drop_na(t)
df_baseline <- df_long %>% filter(t == 0)
View(df_baseline)
df_baseline <- df_baseline %>% drop_na(MRI_)
sum(df_baseline$Grupo == "HC")
sum(df_baseline$Grupo == "TRS")
sum(df_baseline$Grupo == "nonTRS")
df_first_occurrence <- df %>%
distinct(ID, .keep_all = TRUE)
sum(df_first_occurrence$group == "HC")
sum(df_first_occurrence$group == "TRS")
sum(df_first_occurrence$group == "nonTRS")
View(df_baseline)
df_baseline_nonTRS <- df_long %>% filter(t == 0) %>% filter (Grupo == "nonTRS")
View(df_baseline_nonTRS)
View(df_first_occurrence)
df_fup <- df %>%
group_by(subject_id, group) %>%
summarise(has_follow_up = n() > 1) %>%
ungroup()
df<-read.csv("cleansample_covars.csv")
df <- df[df$ID != 'C104', ]
df <- df[df$ID != 'C105', ]
df_fup <- df %>%
group_by(ID, group) %>%
summarise(has_follow_up = n() > 1) %>%
ungroup()
View(df_fup)
sum(df_fup$group=="nonTRS")
View(df_fup)
sum(df_fup$group=="nonTRS" & df_fup$has_follow_up==TRUE)
37/61
56*57
4/37
sum(df_fup$group!="HC" & df_fup$has_follow_up==TRUE)
30/87
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT/Longitudinalplot_cleansample.R")
ggplot(organized_df, aes(x = t_DIT)) +
geom_line(aes(y=ID, group = ID ), size = .3) +
geom_point(aes(y=ID, color = as.factor(group),shape = factor(ses)), size=2) +
labs(x = "Months", y = "Subject ID", color = "Group", shape= "Session") +
theme(legend.position = "top", axis.text.y = element_text(size = 5)) +
geom_density(aes(y = -..density..*500), fill= "#69b3a2") +
geom_label(aes(x=75, y=-10, label="density")) +
scale_x_continuous(breaks = c(specific_ticks, 0, 25, 50, 75, 100),
labels = c(specific_labels, 0, 25, 50, 75, 100)) +
geom_text(aes(x=12, y=-20, label="1y"), size=3) +
geom_text(aes(x=12*2, y=-20, label="2y"), size=3) +
geom_text(aes(x=12*4, y=-20, label="4y"), size=3) +
geom_text(aes(x=12*6, y=-20, label="6y"), size=3) +
geom_text(aes(x=12*7, y=-20, label="7y"), size=3)
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/Interaction_plots.R")
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/Interaction_plots.R")
install.packages("geomtextpath")
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/Interaction_plots.R")
install.packages("ggsci")
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/Interaction_plots.R")
## Interaction PLOTS ####
ggplot(sample, aes(x = t_DIT, y = tvals_SupVentralCaudate_timexTRS_cluster.1_size_721, color = group, group = ID)) +
geom_point() +
geom_line(size = 0.5, alpha = 0.7,linetype = "dotted") +  # Thinner lines connecting points of the same subject
geom_smooth(method = "lm", se = FALSE, size = 2, aes(group = group)) +  # Overall trend lines for each group
theme_bw() +
scale_color_jama()
source("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/Interaction_plots.R")
View(sample)
ggplot(sample, aes(x = t_DIT, y = tvals_SupVentralCaudate_timexTRS_cluster.1_size_721, color = group, group = ID)) +
geom_point() +
geom_line(size = 0.5, alpha = 0.7,linetype = "dotted") +  # Thinner lines connecting points of the same subject
geom_smooth(method = "lm", se = FALSE, size = 2, aes(group = group)) +  # Overall trend lines for each group
theme_bw() +
scale_color_jama()
ggplot(sample, aes(x = t_DIT, y = tvals_SupVentralCaudate_timexTRS_cluster.2_size_536, color = group, group = ID)) +
geom_point() +
geom_line(size = 0.5, alpha = 0.7,linetype = "dotted") +  # Thinner lines connecting points of the same subject
geom_smooth(method = "lm", se = FALSE, size = 2, aes(group = group)) +  # Overall trend lines for each group
theme_bw() +
scale_color_jama()
rm(list= ls())# ctrl + L to clear console
setwd("~/Documents/GitHub/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT/")
#setwd("/Users/brainsur/Desktop/GitHub_repos/Striatocortical-connectivity-FEPtrt/LongitudinalPLOT")
library(tidyverse)
library(dplyr)
library(hrbrthemes)
#library(ggplot2)
# PREPARE DATA ####
## Import data ####
df<-read.csv("cleansample_covars.csv")
df <- df[df$ID != 'C104', ]
df <- df[df$ID != 'C105', ]
df_allIDs <- df %>%
distinct(ID, .keep_all = TRUE)
View(df_allIDs)
sum(df_allIDs$group=="TRS")
sum(df_allIDs$group=="nonTRS")
sum(df_allIDs$group=="HC")
mean(df_allIDs$age[df_allIDs$group=="nonTRS"])
View(df_allIDs)
mean(df_allIDs$age[df_allIDs$group=="nonTRS"])
colnames(df_allIDs)
head(df_allIDs)
library(dplyr)
# Calculate the percentage of male in each group
male_percentage <- df_allIDs %>%
group_by(group) %>%
summarise(total = n(),
males = sum(sex == "Masculino"),
percentage_male = (males / total) * 100)
print(male_percentage)
# Create a contingency table for the chi-square test
contingency_table <- table(df_allIDs$group, df_allIDs$sex)
# Perform the chi-square test
chi_square_test <- chisq.test(contingency_table)
print(chi_square_test)
# Post-hoc pairwise comparisons if chi-square is significant
if (chi_square_test$p.value < 0.05) {
# Using pairwise Fisher's exact test for post-hoc analysis
library(rcompanion)
pairwise_fisher_test <- pairwiseNominalIndependence(contingency_table, fisher = TRUE, gtest = FALSE, chisq = FALSE, method = "bonferroni")
print(pairwise_fisher_test)
}
install.packages(rcompanion)
install.packages("rcompanion"")
install.packages("rcompanion")
contingency_table <- table(df_allIDs$group, df_allIDs$sex)
# Perform the chi-square test
chi_square_test <- chisq.test(contingency_table)
print(chi_square_test)
if (chi_square_test$p.value < 0.05) {
# Using pairwise Fisher's exact test for post-hoc analysis
library(rcompanion)
pairwise_fisher_test <- pairwiseNominalIndependence(contingency_table, fisher = TRUE, gtest = FALSE, chisq = FALSE, method = "bonferroni")
print(pairwise_fisher_test)
}
age_stats <- df_allIDs %>%
group_by(group) %>%
summarise(mean_age = mean(age, na.rm = TRUE),
sd_age = sd(age, na.rm = TRUE))
print(age_stats)
# Perform ANOVA
anova_test <- aov(age ~ group, data = df)
summary(anova_test)
# Check if ANOVA is significant and perform post-hoc tests if necessary
if (summary(anova_test)[[1]][["Pr(>F)"]][1] < 0.05) {
# Using Tukey's HSD for post-hoc analysis
posthoc_test <- TukeyHSD(anova_test)
print(posthoc_test)
}
shapiro_test_results <- df_allIDs %>%
group_by(group) %>%
summarise(p_value = shapiro.test(age)$p.value)
print(shapiro_test_results)
if (any(shapiro_test_results$p_value < 0.05)) {
# Perform Kruskal-Wallis test if normality is violated
kruskal_test <- kruskal_test(age ~ group, data = df)
print(kruskal_test)
# Post-hoc Dunn test if Kruskal-Wallis is significant
if (kruskal_test$p < 0.05) {
posthoc_test <- dunn_test(age ~ group, data = df, p.adjust.method = "bonferroni")
print(posthoc_test)
}
}
library(tidyverse)
library(dplyr)
library(hrbrthemes)
library(rcompanion)
library(rstatix)
install.packages("rstatix")
library(tidyverse)
library(dplyr)
library(hrbrthemes)
library(rcompanion)
library(rstatix)
library(ggplot2)
library(car)
if (any(shapiro_test_results$p_value < 0.05)) {
# Perform Kruskal-Wallis test if normality is violated
kruskal_test <- kruskal_test(age ~ group, data = df)
print(kruskal_test)
# Post-hoc Dunn test if Kruskal-Wallis is significant
if (kruskal_test$p < 0.05) {
posthoc_test <- dunn_test(age ~ group, data = df, p.adjust.method = "bonferroni")
print(posthoc_test)
}
} else {
# Perform ANOVA if normality is not violated
anova_test <- aov(age ~ group, data = df)
anova_summary <- summary(anova_test)
print(anova_summary)
# Post-hoc Tukey test if ANOVA is significant
if (anova_summary[[1]][["Pr(>F)"]][1] < 0.05) {
posthoc_test <- TukeyHSD(anova_test)
print(posthoc_test)
}
}
if (any(shapiro_test_results$p_value < 0.05)) {
# Perform Kruskal-Wallis test if normality is violated
kruskal_test <- kruskal_test(age ~ group, data = df_allIDs)
print(kruskal_test)
# Post-hoc Dunn test if Kruskal-Wallis is significant
if (kruskal_test$p < 0.05) {
posthoc_test <- dunn_test(age ~ group, data = df_allIDs, p.adjust.method = "bonferroni")
print(posthoc_test)
}
} else {
# Perform ANOVA if normality is not violated
anova_test <- aov(age ~ group, data = df)
anova_summary <- summary(anova_test)
print(anova_summary)
# Post-hoc Tukey test if ANOVA is significant
if (anova_summary[[1]][["Pr(>F)"]][1] < 0.05) {
posthoc_test <- TukeyHSD(anova_test)
print(posthoc_test)
}
}
df_long <- read.csv("subjects_finallist_DIT.csv")
df_long <- df_long %>% drop_na(t)
head(df_long)
df_long$MRI_[df_long$ID=="1474" & df_long$t == 0]
df_long$Fecha_nacimiento[df_long$ID=="1474" & df_long$t == 0]
df_long$MRI_[df_long$ID=="1474" & df_long$t == 0] - df_long$Fecha_nacimiento[df_long$ID=="1474" & df_long$t == 0]
as.Date(df_long$MRI_[df_long$ID=="1474" & df_long$t == 0]) - as.Date(df_long$Fecha_nacimiento[df_long$ID=="1474" & df_long$t == 0])
(as.Date(df_long$MRI_[df_long$ID=="1474" & df_long$t == 0]) - as.Date(df_long$Fecha_nacimiento[df_long$ID=="1474" & df_long$t == 0]))/365
View(df_allIDs)
View(df_long)
(as.Date(df_long$MRI_[df_long$ID=="1474" & df_long$t == 0]) - as.Date(df_long$Fecha_nacimiento[df_long$ID=="1474" & df_long$t == 0]))/365
round(as.Date(df_long$MRI_[df_long$ID=="1474" & df_long$t == 0]) - as.Date(df_long$Fecha_nacimiento[df_long$ID=="1474" & df_long$t == 0]))/365
as.integer(as.Date(df_long$MRI_[df_long$ID=="1474" & df_long$t == 0]) - as.Date(df_long$Fecha_nacimiento[df_long$ID=="1474" & df_long$t == 0]))/365
as.integer(
(as.Date(df_long$MRI_[df_long$ID == "1474" & df_long$t == 0]) - as.Date(df_long$Fecha_nacimiento[df_long$ID == "1474" & df_long$t == 0])) / 365
)
